name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Backend Dependencies
      run: |
        echo "📦 Instalando dependencias del backend..."
        npm install --production
        echo "✅ Dependencias del backend instaladas"
    
    - name: Install Frontend Dependencies
      run: |
        echo "📦 Instalando dependencias del frontend..."
        cd client
        npm install
        echo "✅ Dependencias del frontend instaladas"
    
    - name: Build Frontend
      run: |
        echo "🏗️  Construyendo frontend..."
        cd client
        npm run build
        echo "✅ Frontend construido exitosamente"
        ls -lh dist/assets/ | head -5
      
    - name: Prepare deployment files
      run: |
        echo "📦 Preparando archivos para despliegue..."
        # Create a clean deployment directory
        mkdir -p deploy-temp
        # Copy files excluding unwanted directories
        rsync -av \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='client/node_modules' \
          --exclude='.env*' \
          --exclude='logs' \
          --exclude='*.log' \
          --exclude='deploy-temp' \
          --exclude='client/src' \
          --exclude='tests' \
          . deploy-temp/
        # Create tar.gz for deployment
        cd deploy-temp
        tar -czf ../deployment.tar.gz .
        cd ..
        echo "✅ Archivos preparados ($(du -h deployment.tar.gz | cut -f1))"

    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        source: "deployment.tar.gz"
        target: "/home/nicolic3/balancechile.nicolich.cl/"
        strip_components: 0
        overwrite: true
        debug: true
        timeout: 60s

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        debug: true
        timeout: 300s
        script: |
          echo "🚀 Iniciando despliegue en VPS..."
          
          # Navegar al directorio del proyecto
          cd /home/nicolic3/balancechile.nicolich.cl/
          echo "📍 Directorio: $(pwd)"
          echo "👤 Usuario: $(whoami)"
          
          # Configurar variables de entorno
          export NODE_ENV=production
          echo "🔧 NODE_ENV: $NODE_ENV"
          
          # Extraer archivo de despliegue
          if [ -f "deployment.tar.gz" ]; then
            echo "📦 Extrayendo archivos..."
            tar -xzf deployment.tar.gz
            rm deployment.tar.gz
            echo "✅ Archivos extraídos"
          else
            echo "❌ Error: deployment.tar.gz no encontrado"
            exit 1
          fi
          
          # Verificar que npm está disponible
          if ! command -v npm >/dev/null 2>&1; then
            echo "❌ Error: npm no está disponible"
            echo "💡 Instala Node.js en el servidor"
            exit 1
          fi
          
          echo "📦 Node.js: $(node --version)"
          echo "📦 npm: $(npm --version)"
          
          # Instalar dependencias del backend (solo producción)
          echo "📦 Instalando dependencias del backend..."
          npm install --production --no-audit --no-fund
          
          # Verificar que cheerio se instaló (crítico para BCN)
          if [ -d "node_modules/cheerio" ]; then
            echo "✅ cheerio instalado correctamente"
          else
            echo "⚠️  cheerio no encontrado, instalando..."
            npm install cheerio --production
          fi
          
          # Verificar estructura del build del frontend
          echo "🔍 Verificando build del frontend..."
          if [ -d "client/dist" ]; then
            echo "✅ client/dist/ encontrado"
            if [ -f "client/dist/index.html" ]; then
              echo "✅ client/dist/index.html encontrado"
            else
              echo "❌ Error: client/dist/index.html no encontrado"
              exit 1
            fi
            if [ -d "client/dist/assets" ]; then
              echo "✅ client/dist/assets/ encontrado"
              echo "📊 Archivos en assets:"
              ls -lh client/dist/assets/ | head -5
            else
              echo "❌ Error: client/dist/assets/ no encontrado"
              exit 1
            fi
          else
            echo "❌ Error: client/dist/ no encontrado"
            echo "💡 El build del frontend debe estar incluido en el deployment"
            exit 1
          fi
          
          # Verificar archivos críticos
          echo "🔍 Verificando archivos críticos..."
          [ -f "app.js" ] && echo "✅ app.js" || echo "❌ app.js"
          [ -f "src/server.js" ] && echo "✅ src/server.js" || echo "❌ src/server.js"
          [ -f "src/services/bcnService.js" ] && echo "✅ bcnService.js" || echo "❌ bcnService.js"
          [ -f "package.json" ] && echo "✅ package.json" || echo "❌ package.json"
          
          # Verificar configuración
          if [ -f "config.env" ]; then
            echo "✅ config.env encontrado"
          else
            echo "⚠️  config.env no encontrado (normal si está en .gitignore)"
          fi
          
          # Crear directorio tmp si no existe (para restart)
          mkdir -p tmp
          
          # Reiniciar aplicación (LiteSpeed)
          echo "🔄 Reiniciando aplicación..."
          touch tmp/restart.txt
          
          echo ""
          echo "✅ ¡DESPLIEGUE COMPLETADO!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🌐 URL: https://balancechile.nicolich.cl"
          echo "📍 Directorio: /home/nicolic3/balancechile.nicolich.cl/"
          echo "🔧 Node.js: $(node --version)"
          echo "📦 Dependencias: Instaladas"
          echo "🎨 Frontend: Build incluido"
          echo "🔄 Estado: Aplicación reiniciada"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "💡 Verificar en: https://balancechile.nicolich.cl"
          echo "📊 Health check: https://balancechile.nicolich.cl/health"
          echo "📚 API Docs: https://balancechile.nicolich.cl/api-docs"
